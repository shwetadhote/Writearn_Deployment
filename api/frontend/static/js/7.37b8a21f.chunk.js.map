{"version":3,"sources":["resources/components/Common/PostListEngagement.js","resources/components/Common/SharePost.js","resources/components/Common/Username.js","resources/assets/images/verify-icon.svg","resources/components/Home/TrendingPosts.js","resources/assets/images/net-shap.png","resources/components/Common/PostDetailsLoader.js","resources/components/PostDetails/PostEngagements.js","resources/components/PostDetails/CommentOnPostForm.js","resources/components/PostDetails/PostCommentItem.js","resources/components/Common/PostCommentLoader.js","resources/components/PostDetails/PostCommentList.js","resources/components/PostDetails/PostAuthorMedia.js","resources/components/PostDetails/PostImage.js","resources/components/PostDetails/DetailsHeader.js","resources/components/PostDetails/Embed.js","resources/components/PostDetails/PostDescription.js","resources/components/PostDetails/PostCategories.js","resources/components/PostDetails/PostTags.js","resources/components/PostDetails/index.js","resources/containers/PostDetails.js"],"names":["PostListEngagement","totalViews","totalLikes","totalComments","postId","userDetails","useSelector","state","authReducer","details","dispatch","useDispatch","className","href","onClick","isValidUserLogin","requestLikePost","id","setModalState","showLoginModal","showRegisterModal","SharePost","post","share","e","platform","preventDefault","title","shortDescription","featuredImage","url","uri","process","description","replace","RegExp","image","resolvePostImageURL","URL","encodeURIComponent","socialAppUrl","test","navigator","userAgent","window","open","UsernameComponent","user","to","getProfileURL","getFullName","isVerified","src","verifyIcon","alt","style","width","module","exports","TrendingPosts","postType","_id","name","isLoadingFromProps","isLoading","useState","data","setState","getTrendingPosts","a","ApiHelper","FetchFromServer","isError","useEffect","map","_","index","key","height","length","getPostURL","PostDetailsLoader","PostEngagements","totalDislikes","postDetailsReducer","isLikeLoading","isDisLikeLoading","Spinner","animation","size","variant","requestDislikePost","CommentOnPostForm","count","initialState","comment","errors","setErrors","commentOnPostReducer","onLogin","onSubmit","requestCommentOnPost","Row","Col","md","NetShape","Form","noValidate","htmlFor","onChange","target","value","newState","Object","assign","newErrors","resize","Username","firstName","lastName","username","Button","disabled","trim","type","PostCommentItem","commentItem","author","userId","createdAt","showAll","setShowAll","round","moment","format","Date","fromNow","substring","PostCommentsLoader","PostCommentList","postCommentReducer","list","comments","totalRecords","skip","setSkip","requestPostComments","limit","PostAuthorMedia","about","PostImage","backgroundImage","DetailsHeader","level","text","dangerouslySetInnerHTML","__html","ServiceEmbed","service","embed","source","caption","margin","frameborder","scrolling","allowtransparency","PostDescription","console","log","blocks","block","Fragment","file","code","message","items","item","_index","checked","Table","responsive","bordered","content","_i","renderDescription","PostCategories","categories","cat","PostTags","tags","tag","PostDetailsComponent","setTimeout","viewPost","requestViewPost","toDateString","PostDetailsContainer","postDetails","routeMatch","useRouteMatch","requestPostDetails","params","slug","lg"],"mappings":"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","file":"static/js/7.37b8a21f.chunk.js","sourcesContent":["import React from \"react\";\nimport { isValidUserLogin } from \"../../../utills/helpers\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { requestLikePost, setModalState } from \"../../../redux/actions\";\n\nexport const PostListEngagement = ({\n  totalViews,\n  totalLikes,\n  totalComments,\n  postId,\n}) => { \n  const { userDetails } = useSelector((state) => ({\n    userDetails: state.authReducer.details,\n  }));\n  \n  const dispatch = useDispatch();\n  const likePost = () => {\n    if (isValidUserLogin(userDetails)) {\n      dispatch(\n        requestLikePost({\n          id: postId,\n        })\n      );\n    }else{\n      dispatch(\n        setModalState({\n          showLoginModal: true,\n          showRegisterModal: false,\n        })\n      );\n    }\n  };\n  return (\n  <div className=\"rection-wrap\">\n    <a href=\"javscript:void(0);\" className=\"d-inline-flex mr-3\">\n      <span>{totalViews || 0}</span>\n      <i className=\"far fa-eye\"></i>\n    </a>\n    <a href=\"javscript:void(0);\" className=\"d-inline-flex mr-3\" onClick={likePost}>\n      <span>{totalLikes || 0}</span>\n      <i className=\"far fa-thumbs-up\"></i>\n    </a>\n    <a href=\"javscript:void(0);\" className=\"d-inline-flex\">\n      <span>{totalComments || 0}</span>\n      <i className=\"far fa-comment\"></i>\n    </a>\n  </div>\n)};\n","import React from \"react\";\nimport { resolvePostImageURL } from \"../../../utills/helpers\";\nexport const SharePost = ({post}) => {\n  const isMobileOrTablet = () => {\n    return /(android|iphone|ipad|mobile)/i.test(navigator.userAgent);\n  };\n\n  const share = (e, platform) => {\n    e.preventDefault();\n    let { title, shortDescription, featuredImage, url } = post;\n    const uri = `${process.env.REACT_APP_APP_ENDPOINT}${url}`;\n    let description = shortDescription\n      ? shortDescription.replace(new RegExp(/[ +!@#$%^&*().]/g), '_')\n      : '';\n    let image = featuredImage\n      ? resolvePostImageURL(featuredImage)\n      : null;\n    title = title\n      ? title.replace(new RegExp(/[ +!@#$%^&*().]/g), '_')\n      : null;\n    const URL = encodeURIComponent(\n      `${process.env.REACT_APP_SOCIAL_SHARE_URL}?title=${title}&description=${description}&image=${image}&url=${uri}`,\n    );\n\n    let socialAppUrl = '';\n    switch (platform) {\n      case 'facebook':\n        socialAppUrl = `https://www.facebook.com/dialog/share?app_id=${process.env.REACT_APP_FACEBOOK_APP_ID}&display=popup&href=${URL}`;\n        break;\n      case 'whatsapp':\n        socialAppUrl = `https://${\n          isMobileOrTablet() ? 'api' : 'web'\n          }.whatsapp.com/send?text=${URL}`;\n        break;\n      case 'linkedin':\n        socialAppUrl = `https://www.linkedin.com/shareArticle?url=${URL}`;\n        break;\n      case 'twitter':\n        socialAppUrl = `https://twitter.com/share?url=${URL}`;\n        break;\n      default:\n        break;\n    }\n    window.open(socialAppUrl);\n  };\n  return (\n    <div className=\"social-media-listing d-flex mt-3\">\n      <span className=\"mr-2 social-icon\">\n        <i className=\"fas fa-share-alt\"></i>\n      </span>\n      <span className=\"mr-2 social-icon\" onClick={(e) => share(e,'facebook')}>\n        <i className=\"fab fa-facebook-f\"></i>\n      </span>\n      <span className=\"mr-2 social-icon\" onClick={(e) => share(e,'twitter')}>\n        <i className=\"fab fa-twitter\"></i>\n      </span>\n      <span className=\"mr-2 social-icon\" onClick={(e) => share(e,'whatsapp')}>\n        <i className=\"fab fa-whatsapp\"></i>\n      </span>\n      <span className=\"social-icon\" onClick={(e) => share(e,'instagram')}>\n        <i className=\"fab fa-instagram\"></i>\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getProfileURL, getFullName } from \"../../../utills/helpers\";\nimport verifyIcon from \"./../../assets/images/verify-icon.svg\";\nconst UsernameComponent = ({ user }) => (\n  <>\n    <Link to={getProfileURL(user)}>\n      {getFullName(user)}\n      {user.isVerified ? (\n        <>\n          &nbsp;\n          <img\n            src={verifyIcon}\n            alt=\"verify icon\"\n            style={{\n              width: 12,\n            }}\n          />\n        </>\n      ) : null}\n    </Link>\n  </>\n);\n\nexport default UsernameComponent;\n","module.exports = __webpack_public_path__ + \"static/media/verify-icon.ac8a3348.svg\";","import React, { useState, useEffect } from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport {\n  ApiHelper,\n  getPostURL,\n  resolvePostImageURL,\n} from \"../../../utills/helpers\";\nimport { Link } from \"react-router-dom\";\nimport { PostListEngagement } from \"../Common/PostListEngagement\";\n\nconst TrendingPosts = ({\n  _id: postType,\n  name,\n  isLoading: isLoadingFromProps,\n}) => {\n  const [state, setState] = useState({\n    isLoading: true,\n    data: [],\n  });\n  const getTrendingPosts = async () => {\n    const { isError, data } = await new ApiHelper().FetchFromServer(\n      \"/homepage\",\n      `/trending-post/${postType}`,\n      \"GET\",\n      true\n    );\n    if (isError) {\n      setState({\n        isLoading: false,\n        data: [],\n      });\n      return;\n    }\n    setState({\n      isLoading: false,\n      data,\n    });\n  };\n  useEffect(() => {\n    if (!isLoadingFromProps) {\n      getTrendingPosts();\n    }\n    //eslint-disable-next-line\n  }, [isLoadingFromProps]);\n  const { isLoading, data } = state;\n  return (\n    <>\n      <div className=\"main-heading\">\n        <div className=\"ribbon-heading-wrap\">\n          <div className=\"ribbon-heading ligh-blue-ribbon\">\n            <h4 className=\"m-0\">\n              <i className=\"fa fa-chart-line mr-1\"></i>{\" \"}\n              {isLoading || isLoadingFromProps ? (\n                <Skeleton width={100} />\n              ) : (\n                name\n              )}\n            </h4>\n          </div>\n        </div>\n      </div>\n      {isLoading || isLoadingFromProps ? (\n        [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"].map((_, index) => (\n          <div className=\"card-listing\" key={index}>\n            <div className=\"d-flex align-items-center\">\n              <div className=\"user-icon-circle\"></div>\n              <div className=\"blog-card-text ml-2\">\n                <h6 className=\"mb-1\">\n                  <Skeleton height={12} />\n                </h6>\n                <p className=\"m-0\">\n                  <Skeleton height={10} />\n                </p>\n                <div className=\"rection-wrap\">\n                  <Skeleton height={8} />\n                </div>\n              </div>\n            </div>\n          </div>\n        ))\n      ) : data.length ? (\n        data.map((post) => (\n          <div key={post._id} className=\"card-listing\">\n            <div className=\"d-flex align-items-center\">\n              <div className=\"user-icon-circle\">\n                <img\n                  alt=\"\"\n                  src={resolvePostImageURL(post.featuredImage)}\n                  className={\"img-fluid\"}\n                />\n              </div>\n              <div className=\"blog-card-text ml-2\">\n                <h6 className=\"mb-1\">\n                  <Link to={getPostURL(post)}>{post.title}</Link>\n                </h6>\n                <p className=\"m-0\">{post.shortDescription}</p>\n                <PostListEngagement {...post} />\n              </div>\n            </div>\n          </div>\n        ))\n      ) : (\n        <p>\n          No Trending Post <b>{name}</b>\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default TrendingPosts;\n","module.exports = __webpack_public_path__ + \"static/media/net-shap.2d62e4e8.png\";","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\n\nconst PostDetailsLoader = () => (\n  <div className={\"text-left\"}>\n    <Skeleton height={25} />\n    <br />\n    <br />\n    <div className=\"\">\n      <Skeleton height={300} />\n    </div>\n    <div className=\"blog-text  mt-4\">\n      <h6 className=\"blog-category text-uppercase\">\n        <Skeleton key={\"category\"} />\n      </h6>\n      <h4>\n        <Skeleton key={\"description\"} />\n      </h4>\n      <p className=\"mt-3\">\n        <Skeleton key={\"shortdescription\"} width={250} />\n      </p>\n    </div>\n  </div>\n);\n\nexport default PostDetailsLoader;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { requestLikePost, requestDislikePost, setModalState } from \"../../../redux/actions\";\nimport { isValidUserLogin } from \"../../../utills/helpers\";\nimport { Spinner } from \"react-bootstrap\";\nconst PostEngagements = ({\n  totalLikes,\n  totalDislikes,\n  totalComments,\n  totalViews,\n  postId,\n}) => {\n  const { userDetails } = useSelector((state) => ({\n    userDetails: state.authReducer.details,\n  }));\n  const { isLikeLoading, isDisLikeLoading } = useSelector(\n    (state) => state.postDetailsReducer\n  );\n\n\n  const dispatch = useDispatch();\n  const likePost = () => {\n    if (isValidUserLogin(userDetails)) {\n      dispatch(\n        requestLikePost({\n          id: postId,\n        })\n      );\n    } else {\n      dispatch(\n        setModalState({\n          showLoginModal: true,\n          showRegisterModal: false,\n        })\n      );\n    }\n  };\n  const dislike = () => {\n    if (isValidUserLogin(userDetails)) {\n      dispatch(\n        requestDislikePost({\n          id: postId,\n        })\n      );\n    } else {\n      dispatch(\n        setModalState({\n          showLoginModal: true,\n          showRegisterModal: false,\n        })\n      );\n    }\n  };\n  return (\n    <div className={\"like-container\"}>\n      <span className={\"like cursor-pointer\"}>\n        <i className={\"fa fa-eye\"} />\n        &nbsp;&nbsp;Views ({totalViews || 0})\n      </span>\n      &nbsp;&nbsp;\n\n      <span className={\"like cursor-pointer\"} onClick={likePost}>\n        {isLikeLoading ?\n          <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\" />\n          : <i className={\"fa fa-thumbs-up\"} />}\n        &nbsp;&nbsp;Like ({totalLikes || 0})\n      </span>\n      &nbsp;&nbsp;\n\n      <span className={\"like cursor-pointer\"} onClick={dislike}>\n        {isDisLikeLoading ?\n          <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\" />\n          : <i className={\"fa fa-thumbs-down\"} />}\n        &nbsp;&nbsp;Dislike ({totalDislikes || 0})\n      </span>\n      &nbsp;&nbsp;\n      <span className={\"like cursor-pointer\"}>\n        <i className={\"fa fa-comments\"} />\n        &nbsp;&nbsp;Comments ({totalComments || 0})\n      </span>\n    </div>\n  );\n};\n\nexport default PostEngagements;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Form, Button, Spinner, iframe } from \"react-bootstrap\";\nimport NetShape from \"./../../assets/images/net-shap.png\";\nimport { isValidUserLogin } from \"../../../utills/helpers\";\nimport UsernameComponent from \"../Common/Username\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { requestCommentOnPost, setModalState } from \"../../../redux/actions\";\n\nconst CommentOnPostForm = ({ postId, count }) => {\n    const { userDetails } = useSelector((state) => ({\n        userDetails: state.authReducer.details,\n    }));\n    const dispatch = useDispatch();\n\n    const initialState = {\n        comment: \"\",\n        postId: postId,\n    };\n    const [state, setState] = useState(initialState);\n    const [errors, setErrors] = useState(initialState);\n    const { isLoading } = useSelector(\n        (state) => state.commentOnPostReducer\n    );\n    useEffect(() => {\n        if (!isLoading) {\n            setState({\n                ...state,\n                comment: \"\",\n            })\n        }\n    }, [isLoading])\n    const onLogin = () => {\n        dispatch(\n            setModalState({\n                showLoginModal: true,\n                showRegisterModal: false,\n            })\n        );\n    }\n    /**\n     *\n     * @param {*} e\n     */\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        const newState = Object.assign({}, state);\n        newState[name] = value;\n        setState(newState);\n        const newErrors = Object.assign({}, errors);\n        newErrors[name] = \"\";\n        setErrors(newErrors);\n    };\n    /**\n     *\n     * @param {*} e\n     */\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if (isValidUserLogin(userDetails)) {\n            dispatch(\n                requestCommentOnPost({\n                    id: state.postId,\n                    comment: state.comment\n                })\n            );\n        } else {\n            onLogin();\n        }\n    };\n    return (\n        <>\n            <Row>\n                <Col md={12}>\n                    <div className=\"form-wrap post-comment-form\">\n                        <div className=\"net-shape-bg\">\n                            <img src={NetShape} width={300} alt={\"Net Shape\"} />\n                        </div>\n                        <div className=\"ribbon-heading-wrap mb-5\">\n                            <div className=\"ribbon-heading\">\n                                <h2 className=\"mt-2\">Add Your Comment</h2>\n                            </div>\n                        </div>\n                        <Form onSubmit={onSubmit} noValidate>\n                            <Row>\n                                <Col md={12}>\n                                    <div className=\"form-group\">\n                                        <label className=\"form-label\" htmlFor=\"phone\">\n                                            Your comment\n                                        </label>\n                                        <textarea\n                                            id=\"comment\"\n                                            className=\"form-control\"\n                                            name=\"comment\"\n                                            onChange={onChange}\n                                            value={state.comment}\n                                            style={{\n                                                resize: \"none\",\n                                            }}\n                                        />\n                                        {errors.comment ? (\n                                            <p className=\"text-danger\">{errors.comment}</p>\n                                        ) : null}\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col md={12}>\n                                    {isValidUserLogin(userDetails) ? <>Commenting as:&nbsp;\n                                    <UsernameComponent user={{\n                                            firstName: userDetails ? userDetails.firstName : '',\n                                            lastName: userDetails ? userDetails.lastName : '',\n                                            username: userDetails ? userDetails.username : '',\n                                            _id: userDetails ? userDetails._id : '',\n                                        }} /></> : <>You need to <span className={'login-link'} onClick={onLogin}>login</span> to post comment</>}\n                                </Col>\n                            </Row>\n                            <Button className={\"mt-1\"} disabled={isLoading || !state.comment.trim()} variant=\"primary\" type=\"submit\">\n                                {isLoading ? (\n                                    <>\n                                        <Spinner animation=\"border\" size=\"sm\" /> Please wait..\n                                    </>\n                                ) : (\n                                        \"Submit\"\n                                    )}\n                            </Button>\n                        </Form>\n                    </div>\n                </Col>\n\n            </Row>\n        </>\n    );\n};\n\nexport default CommentOnPostForm;\n","import React, { useState } from \"react\";\nimport moment from 'moment'\nimport PostCommentAuthor from \"./PostCommentAuthor\";\nimport { getFullName, getProfileURL } from \"../../../utills/helpers\";\nimport Avatar from \"react-avatar\";\n\nconst PostCommentItem = ({ commentItem }) => {\n    const { userId: author, comment, createdAt } = commentItem\n    const [showAll, setShowAll] = useState(false);\n\n    return (\n        <div className=\"post-comment-item mt-4 bg-white p-3\">\n            <div className={\"author-pic\"}>\n                <Avatar\n                    size={50}\n                    src={getProfileURL(author)}\n                    name={getFullName(author)}\n                    className=\"mr-2\"\n                    round\n                />\n            </div>\n            <div className={'contents'}>\n                <div className=\"media-body\">\n                    <h5 className=\"m-0\"><a href={getProfileURL(author)}>{getFullName(author)}</a></h5>\n                    <small>{moment(\n                        createdAt\n                    ).format(\"DDMMYYYY\") ===\n                        moment(new Date()).format(\n                            \"DDMMYYYY\"\n                        ) ? (\n                            <span>\n                                {moment(\n                                    createdAt\n                                ).fromNow()}\n                            </span>\n                        ) : (\n                            <span>\n                                {moment(\n                                    createdAt\n                                ).format(\"lll\")}</span>)}</small>\n                </div>\n                <p className={'m-0 mt-2'}>\n                    {(!showAll ? comment.substring(0, 200) : comment)}\n                    {\n                        comment.length > 200 ? <span className=\"more-less\" onClick={() => setShowAll(!showAll)}>{showAll ? \"  Read less\" : \"  Read more\"}</span> : null\n                    }\n                </p>\n            </div>\n\n        </div>\n    );\n};\n\nexport default PostCommentItem;\n","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\n\nconst PostCommentsLoader = () => (\n    [\"\", \"\", \"\"].map((_, index) => (\n        <div className=\"card-listing mt-4 bg-white p-3\" key={index}>\n            <div className=\"d-flex align-items-center\">\n                <div className=\"user-icon-circle\"></div>\n                <div className=\"ml-2 col-md-9\">\n                    <h6 className=\"mb-1\">\n                        <Skeleton height={12} />\n                    </h6>\n                    <p className=\"m-0\">\n                        <Skeleton height={10} />\n                    </p>\n                    <div className=\"rection-wrap\">\n                        <Skeleton height={8} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    ))\n)\n\nexport default PostCommentsLoader;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { requestPostComments } from \"../../../redux/actions\";\nimport PostCommentItem from \"./PostCommentItem\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { Button } from \"react-bootstrap\";\nimport PostCommentsLoader from \"../Common/PostCommentLoader\";\n\nlet limit = 10;\n\nconst PostCommentList = ({ postId }) => {\n    const dispatch = useDispatch();\n    const { list: comments = [], totalRecords, isError, isLoading } = useSelector(\n        (state) => state.postCommentReducer\n    );\n    const [skip, setSkip] = useState(0);\n    useEffect(() => {\n        dispatch(requestPostComments({ id: postId, skip, limit }));\n    }, [skip]);\n    const loadmoreComments = () => {\n        // setSkip(prevSkip => prevSkip + limit)\n        setSkip(comments.length)\n    }\n    // const comments = [\n    //     {\n    //         author: {\n    //             firstName: \"Jack\",\n    //             lastName: \"Bamniya\",\n    //             username: \"sbamniya23\",\n    //             _id: \"5f300f8c0f25fa1avcec5c0fec\"\n    //         },\n    //         date: \"1 min ago\",\n    //         comment: \"hello it's perfect.Thanks for amazing website. hello it's perfect.Thanks for amazing website. hello it's perfect.Thanks for amazing website.\"\n    //     },\n    //     {\n    //         author: {\n    //             firstName: \"Daniel\",\n    //             lastName: \"Bamniya\",\n    //             username: \"sbamniya23\",\n    //             _id: \"5f300f8c0f25fa1aec5cxc0fec\"\n    //         },\n    //         date: \"1 hour ago\",\n    //         comment: \"hello it's perfect.Thanks for amazing website.\"\n    //     },\n    //     {\n    //         author: {\n    //             firstName: \"James\",\n    //             lastName: \"Bamniya\",\n    //             username: \"sbamniya23\",\n    //             _id: \"5f300f8c0f25fa1axcvec5c0fec\"\n    //         },\n    //         date: \"1 day ago\",\n    //         comment: \"hello it's perfect.Thanks for amazing website. hello it's perfect.Thanks for amazing website. hello it's perfect.Thanks for amazing website. hello it's perfect.Thanks for amazing website. hello it's perfect.Thanks for amazing website. hello it's perfect.Thanks for amazing website. hello it's perfect.Thanks for amazing website. hello it's perfect.Thanks for amazing website. hello it's perfect.Thanks for amazing website. hello it's perfect.Thanks for amazing website. hello it's perfect.Thanks for amazing website. hello it's perfect.Thanks for amazing website. hello it's perfect.Thanks for amazing website.hello it's perfect.Thanks for amazing website.hello it's perfect.Thanks for amazing website.hello it's perfect.Thanks for amazing website.hello it's perfect.Thanks for amazing website.\"\n    //     },\n    // ];\n\n    return (\n        <>\n            <div className=\"post-comments\">\n                {isLoading && !comments.length ?\n                    <PostCommentsLoader /> :\n                    <>{comments && comments.length ? comments.map((comment) => <PostCommentItem commentItem={comment} key={comment._id} />) : <div>No comments added</div>}\n                        {isLoading && comments.length ?\n                            <PostCommentsLoader /> : totalRecords > comments.length ? <Button\n                                variant=\"primary\"\n                                type=\"button\"\n                                className={'mt-4'}\n                                onClick={loadmoreComments}\n                            >Show more</Button> : null}</>\n                }\n            </div>\n        </>\n    );\n};\n\nexport default PostCommentList;\n","import React from \"react\";\nimport {getProfileURL, getFullName} from \"../../../utills/helpers\";\nimport Avatar from \"react-avatar\";\n\nconst PostAuthorMedia = ({author}) => (\n    <>\n        <div className=\"media\">\n            <Avatar\n                size={50}\n                src={getProfileURL(author)}\n                name={getFullName(author)}\n                className=\"mr-3\"\n                round\n            />\n\n            <div className=\"media-body\">\n                <h5 className=\"m-0\">Author: <a href={getProfileURL(author)}>{getFullName(author)}</a></h5>\n                <small>{author.about}</small>\n            </div>\n        </div>\n    </>\n);\nexport default PostAuthorMedia;\n","import React from \"react\";\nimport {resolvePostImageURL} from \"../../../utills/helpers\";\n\nconst PostImage = ({post}) => {\n\n    return (\n        <div className={\"featured-image-container my-2\"}>\n            <div className={\"img-container text-center my-2\"}>\n                <div\n                    className={\"feature-image-background\"}\n                    style={{\n                        backgroundImage: `url(${resolvePostImageURL(\n                            post.featuredImage\n                        )})`,\n                    }}\n                />\n\n                <img\n                    src={resolvePostImageURL(post.featuredImage)}\n                    alt={post.title}\n                    className={\"featured-image img-fluid\"}\n                />\n            </div>\n\n            <div className={\"caption\"}>{post.shortDescription}</div>\n        </div>\n    );\n};\n\nexport default PostImage;\n","import React from \"react\";\nconst DetailsHeader = ({ level, text }) => {\n  switch (level) {\n    case 1:\n      return <h1 dangerouslySetInnerHTML={{ __html: text }} />;\n    case 2:\n      return <h2 dangerouslySetInnerHTML={{ __html: text }} />;\n    case 3:\n      return <h3 dangerouslySetInnerHTML={{ __html: text }} />;\n\n    case 4:\n      return <h4 dangerouslySetInnerHTML={{ __html: text }} />;\n    case 5:\n      return <h5 dangerouslySetInnerHTML={{ __html: text }} />;\n    default:\n      return <h6 dangerouslySetInnerHTML={{ __html: text }} />;\n  }\n};\nexport default DetailsHeader;\n","import React from \"react\";\n\nconst ServiceEmbed = ({ data }) => {\n  switch (data.service) {\n    case \"youtube\":\n      return (\n        <>\n          <div className=\"text-center\">\n            <iframe\n              width={data.width || 420}\n              height={data.height || 315}\n              src={data.embed}\n              title={data.source}\n            />\n          </div>\n          {data.caption ? <p>{data.caption}</p> : null}\n        </>\n      );\n    case \"twitter\":\n      return (\n        <>\n          <div className=\"text-center\">\n            <iframe\n              width={data.width || 420}\n              height={data.width || 420}\n              src={data.embed}\n              title={data.source}\n              style={{\n                margin: \"0 auto\",\n              }}\n              frameborder=\"0\"\n              scrolling=\"no\"\n              allowtransparency=\"true\"\n              className=\"embed-tool__content\"\n            />\n          </div>\n          {data.caption ? <p>{data.caption}</p> : null}\n        </>\n      );\n    default:\n      return <></>;\n  }\n};\n\nexport default ServiceEmbed;\n","import React from \"react\";\nimport DetailsHeader from \"./DetailsHeader\";\nimport ServiceEmbed from \"./Embed\";\nimport {Table} from \"react-bootstrap\";\n\nconst PostDescription = ({description}) => {\n\n    console.log(description,\"PostDescriptionPostDescriptionPostDescription\")\n    const renderDescription = (description) => {\n        return (\n            <>\n                {description.blocks.map((block, index) => {\n                    switch (block.type) {\n                        case \"header\":\n                            return (\n                                <React.Fragment key={index}>\n                                    <DetailsHeader\n                                        level={block.data.level}\n                                        text={block.data.text}\n                                    />\n                                </React.Fragment>\n                            );\n                        case \"embed\":\n                            return (\n                                <React.Fragment key={index}>\n                                    <ServiceEmbed data={block.data}/>\n                                </React.Fragment>\n                            );\n                        case \"paragraph\":\n                            return (\n                                <React.Fragment key={index}>\n                                    <p className={'post-description-p'} dangerouslySetInnerHTML={{__html: block.data.text}}/>\n                                </React.Fragment>\n                            );\n                        case \"image\":\n                            return (\n                                <React.Fragment key={index}>\n                                    <img src={block.data.file.url} className=\"img-fluid\" alt=\"\"/>\n                                    {block.data.caption ? <p>{block.data.caption}</p> : null}\n                                </React.Fragment>\n                            );\n                        case \"code\":\n                            return (\n                                <React.Fragment key={index}>\n                                  <pre>\n                                    <code>{block.data.code}</code>\n                                  </pre>\n                                </React.Fragment>\n                            );\n                        case \"quote\":\n                            return (\n                                <React.Fragment key={index}>\n                                    <blockquote>{block.data.text}</blockquote>\n                                </React.Fragment>\n                            );\n                        case \"warning\":\n                            return (\n                                <React.Fragment key={index}>\n                                    <div className=\"warning\">\n                                        <p>{block.data.title}</p>\n                                        <p\n                                            dangerouslySetInnerHTML={{__html: block.data.message}}\n                                        />\n                                    </div>\n                                </React.Fragment>\n                            );\n\n                        case \"list\":\n                            return (\n                                <React.Fragment key={index}>\n                                    {block.data.style === \"ordered\" ? (\n                                        <ol>\n                                            {block.data.items.map((item, _index) => (\n                                                <li key={_index}>{item}</li>\n                                            ))}\n                                        </ol>\n                                    ) : (\n                                        <ul>\n                                            {block.data.items.map((item, index) => (\n                                                <li key={index}>{item}</li>\n                                            ))}\n                                        </ul>\n                                    )}\n                                </React.Fragment>\n                            );\n                        case \"checklist\":\n                            return (\n                                <React.Fragment key={index}>\n                                    <ul>\n                                        {block.data.items.map((item, _index) => (\n                                            <li key={_index}>\n                                                <input type=\"checkbox\" checked={item.checked}/> &nbsp;{\" \"}\n                                                {item.text}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </React.Fragment>\n                            );\n                        case \"delimiter\":\n                            return (\n                                <React.Fragment key={index}>\n                                    <div className=\"delimiter text-center\"/>\n                                </React.Fragment>\n                            );\n                        case \"table\":\n                            return (\n                                <React.Fragment key={index}>\n                                    <Table responsive bordered>\n                                        <tbody>\n                                        {block.data.content.map((content, _index) => (\n                                            <tr key={_index}>\n                                                {content.map((item, _i) => (\n                                                    <td key={_i}>{item}</td>\n                                                ))}\n                                            </tr>\n                                        ))}\n                                        </tbody>\n                                    </Table>\n                                </React.Fragment>\n                            );\n                        default:\n                            return null;\n                    }\n                })}\n            </>\n        );\n    };\n\n    return (\n        <div className=\"post-description-container\">\n            {renderDescription(description)}\n        </div>\n    );\n};\n\nexport default PostDescription;\n","import React from \"react\";\n\nconst PostCategories = ({categories}) => {\n\n    return (\n        <h6 className=\"blog-category mt-3 mb-2 text-uppercase\">\n            Categories:{\" \"}\n            {categories.map((cat) => (\n                <React.Fragment key={cat._id}>\n                    <span className=\"category-tag\">{cat.name}</span>&nbsp;\n                </React.Fragment>\n            ))}\n        </h6>\n    );\n};\n\nexport default PostCategories;\n","import React from \"react\";\nconst PostTags = ({tags}) => {\n\n    return (\n        <>\n            {tags && tags.length ? (\n                <h6 className=\"blog-tags text-uppercase\">\n                    Tags:{\" \"}\n                    {tags.map((tag) => (\n                        <React.Fragment key={tag}>\n                            <span className=\"badge badge-secondary tag text\">{tag}</span>&nbsp;\n                        </React.Fragment>\n                    ))}\n                </h6>\n            ) : null}\n            </>\n    );\n};\n\nexport default PostTags;\n","import React, { useEffect } from \"react\";\nimport {\n    FacebookIcon,\n    FacebookShareButton,\n    TwitterIcon,\n    TwitterShareButton,\n} from \"react-share\";\nimport { useDispatch } from \"react-redux\";\nimport PostDetailsLoader from \"../Common/PostDetailsLoader\";\nimport PostEngagements from \"./PostEngagements\";\nimport CommentOnPostForm from \"./CommentOnPostForm\";\nimport PostCommentList from \"./PostCommentList\";\nimport PostAuthorMedia from \"./PostAuthorMedia\";\nimport PostImage from \"./PostImage\";\nimport PostDescription from \"./PostDescription\";\nimport PostCategories from \"./PostCategories\";\nimport PostTags from \"./PostTags\";\nimport { requestViewPost } from \"../../../redux/actions\";\nimport { SharePost } from \"../Common/SharePost\";\nimport { getPostURL } from \"../../../utills/helpers\";\n\nexport const PostDetailsComponent = ({ isLoading, post }) => {\n    useEffect(() => {\n        if (!isLoading && post && post._id) {\n            // To Request view increase after 10 seconds.\n            setTimeout(() => {\n                viewPost()\n            }, 10000);\n        }\n    }, [post && post._id]);\n  const dispatch = useDispatch();\n    const viewPost = () => {\n        dispatch(\n            requestViewPost({\n                id: post._id,\n            })\n        );\n    };\n    return (\n        <>\n            {isLoading ? (\n                <>\n                    <PostDetailsLoader />\n                </>\n            ) : (\n                    <div className={\"post-details-container\"}>\n                        <h1 className={\"post-title\"}> {post.title}</h1>\n\n                        <div>\n                            Date: {(new Date()).toDateString()}\n                        </div>\n\n                        <PostImage post={post} />\n\n                        <PostDescription description={post.description} />\n\n                        <PostCategories categories={post.categories} />\n                        <br />\n                        <PostTags tags={post.tags} />\n                        <br />\n                        <PostEngagements\n                            totalViews={post.totalViews}\n                            totalLikes={post.totalLikes}\n                            totalDislikes={post.totalDislikes}\n                            totalComments={post.totalComments}\n                            postId={post._id}\n                        />\n                        <br />\n                        <SharePost post={{ ...post, url: getPostURL(post) }} />\n                        {/* <div className={\"share-container\"}>\n                            <FacebookShareButton className={\"\"} url={\"https://writeearn.in\"} quote={post.title} hashtag={\"#writearn\"}>\n                                <FacebookIcon size={35} round />\n                            </FacebookShareButton>\n                            &nbsp;\n                        <TwitterShareButton>\n                                <TwitterIcon size={35} round />\n                            </TwitterShareButton>\n                        </div> */}\n\n                        <hr className={\"post-detail-hr\"} />\n                        <PostAuthorMedia author={post.author} />\n\n                        <div className={\"add-comment mt-3\"}>\n                            <h5 className=\"text-capitalize comments-count\">\n                                {post.totalComments} Comments\n                        </h5>\n                            <CommentOnPostForm postId={post._id} author={post.author} />\n                        </div>\n\n                        <div className={\"comment-list mt-4\"}>\n                            <PostCommentList postId={post._id} />\n                        </div>\n\n                    </div>\n                )}\n        </>\n    );\n};\n","import React, { useEffect } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { requestPostDetails } from \"../../redux/actions\";\nimport TrendingPost from \"../components/Home/TrendingPosts\";\nimport { PostDetailsComponent } from \"../components/PostDetails\";\n\nconst PostDetailsContainer = () => {\n  const dispatch = useDispatch();\n  const { isLoading, postDetails: post } = useSelector(\n    (state) => state.postDetailsReducer\n  );\n  const routeMatch = useRouteMatch();\n  useEffect(() => {\n    dispatch(requestPostDetails(routeMatch.params));\n    // eslint-disable-next-line\n  }, [routeMatch.params.id, routeMatch.slug]);\n\n  return (\n    <>\n      <Row>\n        <Col lg={9}>\n          <PostDetailsComponent isLoading={isLoading || post._id !== routeMatch.params.id} post={post} />\n        </Col>\n        <Col lg={3}>\n          <div className=\"blog-card mt-5 mt-md-0\">\n            <TrendingPost {...post.postType} isLoading={isLoading} />\n          </div>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PostDetailsContainer;\n"],"sourceRoot":""}
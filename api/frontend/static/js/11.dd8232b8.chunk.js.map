{"version":3,"sources":["resources/assets/images/main-logo.svg","resources/components/Auth/Social/index.js","resources/components/Auth/Signup/SignupForm.js"],"names":["module","exports","SocialLogin","className","style","justifyContent","variant","type","onClick","window","location","href","process","SignupFormComponent","onLogin","useState","firstName","lastName","email","password","confirmPassword","formValues","setFormValues","formErrors","setFormErrors","dispatch","useDispatch","isLoading","useSelector","state","authReducer","isLoadingAuth","onInputChange","e","target","name","value","newFormValues","Object","assign","newFormErrors","src","logo","width","alt","onSubmit","preventDefault","SignUpValidations","validateSync","abortEarly","requestSignup","error","getValidationErrors","noValidate","Group","controlId","Control","placeholder","onChange","disabled","size","animation","to"],"mappings":"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","file":"static/js/11.dd8232b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main-logo.42ad4115.svg\";","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nexport const SocialLogin = () => (\n  <div\n    className=\"auth-socail-btn-wrap d-flex flex-wrap mt-2\"\n    style={{\n      justifyContent: \"center\",\n    }}\n  >\n    <p className=\"w-100 text-center mt-3 mb-1\">Or Continue With</p>\n    <Button\n      variant=\"primary\"\n      type=\"button\"\n      className=\"facebook-btn\"\n      onClick={() => {\n        window.location.href = process.env.REACT_APP_FACEBOOK_LOGIN_URL;\n      }}\n    >\n      <i className=\"fab fa-facebook-f\"></i>\n    </Button>\n    <Button\n      variant=\"primary\"\n      type=\"button\"\n      className=\"google-btn\"\n      onClick={() => {\n        window.location.href = process.env.REACT_APP_GOOGLE_LOGIN_URL;\n      }}\n    >\n      <i className=\"fab fa-google\"></i>\n    </Button>\n    {/* <Button variant=\"primary\" type=\"button\" className=\"linkedin-btn\">\n      <i className=\"fab fa-linkedin-in\"></i>\n    </Button>\n    <Button variant=\"primary\" type=\"button\" className=\"twitter-btn\">\n      <i className=\"fab fa-twitter\"></i>\n    </Button> */}\n  </div>\n);\n","import React, { useState } from \"react\";\nimport { Button, Form, Spinner } from \"react-bootstrap\";\nimport logo from \"../../../assets/images/main-logo.svg\";\nimport { SocialLogin } from \"../Social\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getValidationErrors } from \"../../../../utills/helpers\";\nimport { SignUpValidations } from \"../../../validations\";\nimport { requestSignup } from \"../../../../redux/actions\";\nconst SignupFormComponent = ({ onLogin }) => {\n  const [formValues, setFormValues] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [formErrors, setFormErrors] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const dispatch = useDispatch();\n  const { isLoadingAuth: isLoading } = useSelector(\n    (state) => state.authReducer\n  );\n  /**\n   *\n   * @param {*} e\n   */\n  const onInputChange = (e) => {\n    //\n    const { name, value } = e.target;\n    const newFormValues = Object.assign({}, formValues);\n    newFormValues[name] = value;\n    setFormValues(newFormValues);\n    // for errors\n    const newFormErrors = Object.assign({}, formErrors);\n    newFormErrors[name] = \"\";\n    setFormErrors(newFormErrors);\n  };\n  /**\n   *\n   * @param {*} e\n   */\n  const signup = (e) => {\n    e.preventDefault();\n    try {\n      SignUpValidations.validateSync(formValues, {\n        abortEarly: false,\n      });\n      dispatch(requestSignup(formValues));\n    } catch (error) {\n      setFormErrors(getValidationErrors(error));\n    }\n  };\n  return (\n    <>\n      <div className=\"auth-form-wrap\">\n        <div className=\"auth-logo text-center mb-2 mt-2\">\n          <img src={logo} width={160} alt={\"Main Logo\"} />\n        </div>\n        <h5 className=\"mb-3 text-center text-capitalize\">\n          Welcome To Writearn\n        </h5>\n        <Form onSubmit={signup} noValidate>\n          <div className=\"d-flex\">\n            <Form.Group controlId=\"fname\" className=\"mr-3\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"\"\n                onChange={onInputChange}\n                value={formValues.firstName}\n                name=\"firstName\"\n              />\n              {/* <Form.Label>First Name</Form.Label> */}\n              <label className={`form-control-placeholder ${formValues.firstName ?  \"float-label\" : \"\" }`}>\n                First Name\n              </label>\n              {formErrors.firstName ? (\n                <p className=\"text-danger\">{formErrors.firstName}</p>\n              ) : null}\n            </Form.Group>\n            <Form.Group controlId=\"lname\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"\"\n                onChange={onInputChange}\n                value={formValues.lastName}\n                name=\"lastName\"\n              />\n              <label className={`form-control-placeholder ${formValues.lastName ?  \"float-label\" : \"\" }`}>\n                Last Name\n              </label>\n             \n              {formErrors.lastName ? (\n                <p className=\"text-danger\">{formErrors.lastName}</p>\n              ) : null}\n            </Form.Group>\n          </div>\n          <Form.Group controlId=\"email\">\n            <Form.Control\n              type=\"email\"\n              placeholder=\"\"\n              onChange={onInputChange}\n              value={formValues.email}\n              name=\"email\"\n            />\n            {/* <Form.Label>Email</Form.Label> */}\n            <label className={`form-control-placeholder ${formValues.email ?  \"float-label\" : \"\" }`}>\n            Email\n              </label>\n            {formErrors.email ? (\n              <p className=\"text-danger\">{formErrors.email}</p>\n            ) : null}\n          </Form.Group>\n          <Form.Group controlId=\"pwd\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"\"\n              onChange={onInputChange}\n              value={formValues.password}\n              name=\"password\"\n            />\n            {/* <Form.Label className=\"form-control-placeholder\">\n              Password\n            </Form.Label> */}\n            <label className={`form-control-placeholder ${formValues.password ?  \"float-label\" : \"\" }`}>\n            Password\n              </label>\n            {formErrors.password ? (\n              <p className=\"text-danger\">{formErrors.password}</p>\n            ) : null}\n          </Form.Group>\n          <Form.Group controlId=\"cpwd\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"\"\n              onChange={onInputChange}\n              value={formValues.confirmPassword}\n              name=\"confirmPassword\"\n            />\n            {/* <Form.Label className=\"form-control-placeholder\">\n              Confirm Password\n            </Form.Label> */}\n            <label className={`form-control-placeholder ${formValues.confirmPassword ?  \"float-label\" : \"\" }`}>\n            Confirm Password             \n             </label>\n            {formErrors.confirmPassword ? (\n              <p className=\"text-danger\">{formErrors.confirmPassword}</p>\n            ) : null}\n          </Form.Group>\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            className=\"w-100\"\n            disabled={isLoading}\n          >\n            {isLoading ? (\n              <>\n                <Spinner size=\"sm\" animation=\"border\" />\n                &nbsp; Please wait...\n              </>\n            ) : (\n              <>Create account for free</>\n            )}\n          </Button>\n          <div className=\"auth-links d-flex align-items-center justify-content-between mt-2\">\n            <p className=\"m-0\">\n              Already a member ?\n              <Link\n                to={\"/\"}\n                onClick={(e) => {\n                  e.preventDefault();\n                  onLogin();\n                }}\n              >\n                {\" \"}\n                Login.\n              </Link>\n            </p>\n          </div>\n          <SocialLogin />\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default SignupFormComponent;\n"],"sourceRoot":""}
{"version":3,"sources":["resources/components/MyProfile/BasicDetails/index.tsx"],"names":["optionalFields","BasicDetails","useState","firstName","lastName","username","phoneNumber","address","state","city","about","pincode","gender","profileDetails","setProfileDetails","formErrors","setFormErrors","featuredImagePreview","setFeaturedImagePreview","dispatch","useDispatch","useSelector","profileReducer","isLoading","isUpdating","details","useEffect","profileImage","process","saveProfileDetails","e","a","key","preventDefault","toggleProfileUpdateLoader","newFormValues","Object","assign","hasOwnProperty","element","indexOf","ProfileDetailsValidations","validate","abortEarly","requestUpdateProfile","getValidationErrors","inputChange","name","target","value","isNaN","newFormErrors","title","noValidate","className","onSubmit","autoComplete","label","message","src","alt","accept","error","helperText","onDrop","acceptedFiles","forEach","file","reader","FileReader","onload","result","readAsDataURL","container","spacing","item","sm","md","lg","xs","type","variant","fullWidth","onChange","row","control","color","labelPlacement","disabled","email","inputProps","maxLength","multiline","rows","onClick","text"],"mappings":"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","file":"static/js/22.4e347e8f.chunk.js","sourcesContent":["import {\n  CardHeader,\n  Divider,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n  TextField,\n} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  IBasicDetailsForm,\n  IBasicDetailsFormErrors,\n  IBasicDetailsFormFields,\n  IRootState,\n} from \"../../../../interfaces\";\nimport {\n  requestUpdateProfile,\n  toggleProfileUpdateLoader,\n} from \"../../../../redux/actions\";\nimport { getValidationErrors } from \"../../../../utills/helpers\";\nimport { ProfileDetailsValidations } from \"../../../validations\";\nimport AppButton from \"../../Common/AppButton\";\nimport AppDropZone from \"../../Common/AppDropZone\";\nconst optionalFields = [\n  \"gender\",\n  \"phoneNumber\",\n  \"address\",\n  \"state\",\n  \"city\",\n  \"pincode\",\n  \"about\",\n];\nconst BasicDetails = () => {\n  const [profileDetails, setProfileDetails] = useState<IBasicDetailsForm>({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    phoneNumber: \"\",\n    address: \"\",\n    state: \"\",\n    city: \"\",\n    about: \"\",\n    pincode: \"\",\n    gender: null,\n  });\n  const [formErrors, setFormErrors] = useState<IBasicDetailsFormErrors>({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    gender: \"\",\n    phoneNumber: \"\",\n    address: \"\",\n    state: \"\",\n    city: \"\",\n    pincode: \"\",\n    about: \"\",\n  });\n  const [featuredImagePreview, setFeaturedImagePreview] = useState<string>(\"\");\n  const dispatch = useDispatch();\n  const { isLoading, isUpdating, details } = useSelector(\n    (state: IRootState) => state.profileReducer\n  );\n  useEffect(() => {\n    if (!isLoading) {\n      const {\n        firstName,\n        lastName,\n        username,\n        gender,\n        phoneNumber,\n        address,\n        city,\n        state,\n        pincode,\n        about,\n        profileImage,\n      } = details;\n      const updatedDetails: IBasicDetailsForm = {\n        firstName: firstName || \"\",\n        lastName: lastName || \"\",\n        username: username || \"\",\n        gender: gender || null,\n        phoneNumber: phoneNumber || \"\",\n        address: address || \"\",\n        city: city || \"\",\n        state: state || \"\",\n        pincode: pincode || \"\",\n        about: about || \"\",\n      };\n      setProfileDetails(updatedDetails);\n      if (profileImage) {\n        setFeaturedImagePreview(\n          `${process.env.REACT_APP_POST_IMAGE_ENDPOINT}${profileImage}`\n        );\n      }\n    }\n    // eslint-disable-next-line\n  }, [isLoading]);\n  const saveProfileDetails = async (e: any) => {\n    e.preventDefault();\n    dispatch(\n      toggleProfileUpdateLoader({\n        isUpdating: true,\n      })\n    );\n    try {\n      const newFormValues: any = Object.assign({}, profileDetails);\n      for (const key in newFormValues) {\n        if (newFormValues.hasOwnProperty(key)) {\n          const element = newFormValues[key];\n          if (optionalFields.indexOf(key) > -1 && !element) {\n            delete newFormValues[key];\n          }\n        }\n      }\n      await ProfileDetailsValidations.validate(newFormValues, {\n        abortEarly: false,\n      });\n      dispatch(requestUpdateProfile(newFormValues));\n    } catch (error) {\n      dispatch(\n        toggleProfileUpdateLoader({\n          isUpdating: false,\n        })\n      );\n      setFormErrors(getValidationErrors(error));\n    }\n  };\n  const inputChange = (e: any) => {\n    const name = e.target.name as IBasicDetailsFormFields,\n      value = e.target.value;\n    const newFormValues = Object.assign({}, profileDetails);\n    if(name === \"phoneNumber\" && isNaN(value)){\n      return;\n    }\n    newFormValues[name] = value;\n    setProfileDetails(newFormValues);\n    // unset error message\n    const newFormErrors = Object.assign({}, formErrors);\n    newFormErrors[name] = \"\";\n    setFormErrors(newFormErrors);\n  };\n  const onDrop = (acceptedFiles: any[]) => {\n    const newFormValues = Object.assign({}, profileDetails);\n    newFormValues.profileImage = acceptedFiles[0];\n    setProfileDetails(newFormValues);\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setFeaturedImagePreview(e.target?.result as string);\n      };\n      reader.readAsDataURL(file);\n    });\n  };\n\n  return (\n    <Card>\n      <CardHeader title={<>Your Profile</>} />\n      <Divider />\n      <CardContent>\n        <form\n          noValidate\n          className={\"form-container\"}\n          onSubmit={saveProfileDetails}\n          autoComplete=\"off\"\n        >\n          <AppDropZone\n            label={\"Profile Image\"}\n            message={\n              featuredImagePreview ? (\n                <>\n                  <img src={featuredImagePreview} alt=\"\" />\n                </>\n              ) : (\n                \"Choose a profile image\"\n              )\n            }\n            accept=\"image/*\"\n            error={!!formErrors.profileImage}\n            helperText={formErrors.profileImage}\n            onDrop={onDrop}\n          />\n          <Grid container spacing={1}>\n            <Grid\n              item\n              sm={6}\n              md={6}\n              lg={6}\n              xs={12}\n            >\n              <TextField\n                className={\"form-input inline-input\"}\n                name=\"username\"\n                label=\"Username\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                autoComplete=\"first-name\"\n                value={profileDetails.username}\n                error={!!formErrors.username}\n                helperText={formErrors.username}\n                onChange={inputChange}\n              />\n            </Grid>\n            <Grid\n              item\n              sm={6}\n              md={6}\n              lg={6}\n              xs={12}\n              className={\"form-input\"}\n            >\n              <FormLabel>Gender:&nbsp;&nbsp;</FormLabel>\n              <RadioGroup\n                row\n                name=\"gender\"\n                onChange={inputChange}\n                value={profileDetails.gender}\n              >\n                <FormControlLabel\n                  value=\"top\"\n                  control={<Radio value=\"male\" color=\"primary\" />}\n                  label=\"Male\"\n                  labelPlacement=\"end\"\n                />\n                <FormControlLabel\n                  value=\"top\"\n                  control={<Radio value=\"female\" color=\"primary\" />}\n                  label=\"Female\"\n                  labelPlacement=\"end\"\n                />\n                <FormControlLabel\n                  value=\"top\"\n                  control={<Radio value=\"other\" color=\"primary\" />}\n                  label=\"Other\"\n                  labelPlacement=\"end\"\n                />\n              </RadioGroup>\n            </Grid>\n            <Grid\n              item\n              sm={6}\n              md={6}\n              lg={6}\n              xs={12}\n            >\n              <TextField\n                className={\"form-input inline-input\"}\n                name=\"firstName\"\n                label=\"First Name\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                autoComplete=\"first-name\"\n                error={!!formErrors.firstName}\n                helperText={formErrors.firstName}\n                value={profileDetails.firstName}\n                onChange={inputChange}\n              />\n            </Grid>\n            <Grid\n              item\n              sm={6}\n              md={6}\n              lg={6}\n              xs={12}\n              className={\"padding-left-10\"}\n            >\n              <TextField\n                className={\"form-input\"}\n                name=\"lastName\"\n                label=\"Last Name\"\n                type=\"text\"\n                variant=\"outlined\"\n                autoComplete=\"last-name\"\n                fullWidth\n                error={!!formErrors.lastName}\n                helperText={formErrors.lastName}\n                value={profileDetails.lastName}\n                onChange={inputChange}\n              />\n            </Grid>\n            <Grid\n              item\n              sm={6}\n              md={6}\n              lg={6}\n              xs={12}\n            >\n              <TextField\n                className={\"form-input\"}\n                name=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                variant=\"outlined\"\n                autoComplete=\"email\"\n                disabled\n                fullWidth\n                // defaultValue={details.email}\n                value={details.email}\n                onChange={inputChange}\n              />\n            </Grid>\n            <Grid\n              item\n              sm={6}\n              md={6}\n              lg={6}\n              xs={12}\n              className={\"padding-left-10\"}\n            >\n              <TextField\n                className={\"form-input\"}\n                name=\"phoneNumber\"\n                label=\"Phone Number\"\n                type=\"text\"\n                variant=\"outlined\"\n                autoComplete=\"phone-number\"\n                fullWidth\n                value={profileDetails.phoneNumber}\n                error={!!formErrors.phoneNumber}\n                helperText={formErrors.phoneNumber}\n                inputProps={{\n                  maxLength:14\n                }}\n                onChange={inputChange}\n              />\n            </Grid>\n            <Grid\n              item\n              sm={6}\n              md={6}\n              lg={6}\n              xs={12}\n            >\n              <TextField\n                className={\"form-input inline-input\"}\n                name=\"address\"\n                label=\"Address\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                autoComplete=\"first-name\"\n                value={profileDetails.address}\n                error={!!formErrors.address}\n                helperText={formErrors.address}\n                onChange={inputChange}\n              />\n            </Grid>\n            <Grid\n              item\n              sm={6}\n              md={6}\n              lg={6}\n              xs={12}\n              className={\"padding-left-10\"}\n            >\n              <TextField\n                className={\"form-input\"}\n                name=\"state\"\n                label=\"State\"\n                type=\"text\"\n                variant=\"outlined\"\n                autoComplete=\"last-name\"\n                fullWidth\n                error={!!formErrors.state}\n                helperText={formErrors.state}\n                value={profileDetails.state}\n                onChange={inputChange}\n              />\n            </Grid>\n            <Grid\n              item\n              sm={6}\n              md={6}\n              lg={6}\n              xs={12}\n            >\n              <TextField\n                className={\"form-input\"}\n                name=\"city\"\n                label=\"City\"\n                type=\"city\"\n                variant=\"outlined\"\n                autoComplete=\"email\"\n                fullWidth\n                error={!!formErrors.city}\n                helperText={formErrors.city}\n                value={profileDetails.city}\n                onChange={inputChange}\n              />\n            </Grid>\n            <Grid\n              item\n              sm={6}\n              md={6}\n              lg={6}\n              xs={12}\n              className={\"padding-left-10\"}\n            >\n              <TextField\n                className={\"form-input\"}\n                name=\"pincode\"\n                label=\"Pin Code\"\n                type=\"text\"\n                variant=\"outlined\"\n                autoComplete=\"phone-number\"\n                fullWidth\n                error={!!formErrors.pincode}\n                helperText={formErrors.pincode}\n                value={profileDetails.pincode}\n                inputProps={{\n                  maxLength:6\n                }}\n                onChange={inputChange}\n              />\n            </Grid>\n            <Grid item sm={12} md={12} lg={12} xs={12}>\n              <TextField\n                className={\"form-input\"}\n                multiline\n                rows={5}\n                name=\"about\"\n                label=\"About Me\"\n                type=\"text\"\n                variant=\"outlined\"\n                autoComplete=\"phone-number\"\n                fullWidth\n                error={!!formErrors.about}\n                helperText={formErrors.about}\n                value={profileDetails.about}\n                onChange={inputChange}\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </CardContent>\n      <Divider />\n      <CardActions className={\"pull-right\"}>\n        <AppButton\n          onClick={saveProfileDetails}\n          type=\"submit\"\n          text=\"Save Details\"\n          color=\"primary\"\n          isLoading={isUpdating}\n          className=\"btn-primary\"\n        />\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default BasicDetails;\n"],"sourceRoot":""}
{"version":3,"sources":["../../modules/BrowserRouter.js","../../modules/HashRouter.js","../../modules/utils/locationUtils.js","../../modules/Link.js","../../modules/NavLink.js","resources/pages/Signup/index.tsx","resources/validations/Login.ts","resources/validations/Signup.ts","resources/validations/Post.ts","resources/validations/Profile.ts","resources/validations/PayoutMethods.ts","resources/validations/CreatePayout.ts"],"names":["React","Component","resolveToLocation","to","currentLocation","normalizeToLocation","createLocation","forwardRefShim","C","forwardRef","LinkAnchor","innerRef","navigate","onClick","rest","target","props","event","ex","isModifiedEvent","forwardedRef","Link","component","replace","RouterContext","context","history","location","href","method","ariaCurrent","activeClassName","activeStyle","classNameProp","className","exact","isActiveProp","isActive","locationProp","sensitive","strict","styleProp","style","toLocation","path","escapedPath","match","matchPath","classnames","i","joinClassnames","SignUpPage","dispatch","useDispatch","loginState","useSelector","state","singupReducer","useState","email","password","firstName","lastName","confirmPassword","formValues","setFormValues","formErrors","setFormErrors","handleFormvaluesChange","e","name","value","newFormValues","Object","assign","newFormErrors","noValidate","autoComplete","onSubmit","preventDefault","SignupValidation","validateSync","abortEarly","requestSignup","error","getValidationErrors","container","item","sm","md","xs","paddingRight","label","type","variant","helperText","onChange","fullWidth","paddingLeft","size","color","disabled","isLoading","RouteURLs","LOGIN","LoginValidation","yup","shape","required","min","max","oneOf","AddPostValidation","title","slug","trim","matches","postType","shortDescription","categories","of","featuredImage","description","test","this","createError","newValue","JSON","parse","firstBlock","stringify","blocks","console","log","message","includes","div","document","createElement","innerHTML","text","textContent","innerText","split","length","ProfileDetailsValidations","username","a","ApiHelper","FetchFromServer","isError","messages","phoneNumber","notRequired","gender","address","optional","city","pincode","about","AddPayoutMethodValidation","account_type","bank_account","when","is","then","ifsc","account_number","vpa","CreatePayoutValidation","mode","amount"],"mappings":"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","file":"static/js/18.d5b5568b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const method = replace ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link.js\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\",\n      activeStyle,\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      sensitive,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                sensitive,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          const className = isActive\n            ? joinClassnames(classNameProp, activeClassName)\n            : classNameProp;\n          const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.string,\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.object\n  };\n}\n\nexport default NavLink;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  TextField,\n  Button,\n  CircularProgress,\n  Typography,\n  Grid,\n} from \"@material-ui/core\";\nimport { SignupValidation } from \"../../validations\";\nimport { getValidationErrors } from \"../../../utills/helpers\";\nimport {\n  IRootState,\n  ISignupFormValues,\n  ISignupFormErrors,\n  ISignupProps,\n} from \"../../../interfaces\";\nimport { RouteURLs } from \"../../../routes/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { requestSignup } from \"../../../redux/actions\";\n\nconst SignUpPage: React.FC<ISignupProps> = () => {\n  const dispatch = useDispatch();\n  const loginState = useSelector((state: IRootState) => state.singupReducer);\n  const [formValues, setFormValues] = useState<ISignupFormValues>({\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    confirmPassword: \"\",\n  });\n  const [formErrors, setFormErrors] = useState<ISignupFormErrors>({\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    confirmPassword: \"\",\n  });\n  //\n  const handleFormvaluesChange = (e: any) => {\n    const name = e.target.name as \"password\" | \"email\",\n      value = e.target.value;\n    const newFormValues = Object.assign({}, formValues);\n    newFormValues[name] = value;\n    setFormValues(newFormValues);\n    // unset error message\n    const newFormErrors = Object.assign({}, formErrors);\n    newFormErrors[name] = \"\";\n    setFormErrors(newFormErrors);\n  };\n  const handleSignup = (e: any) => {\n    e.preventDefault();\n    try {\n      SignupValidation.validateSync(formValues, {\n        abortEarly: false,\n      });\n      dispatch(requestSignup(formValues));\n    } catch (error) {\n      setFormErrors(getValidationErrors(error));\n    }\n  };\n  return (\n    <>\n      <form\n        noValidate\n        autoComplete=\"off\"\n        className={\"form-container\"}\n        onSubmit={handleSignup}\n      >\n        <Grid container>\n          <Grid\n            item\n            sm={6}\n            md={6}\n            xs={12}\n            style={{\n              paddingRight: 10,\n            }}\n          >\n            <TextField\n              className={\"form-input\"}\n              name=\"firstName\"\n              label=\"First Name\"\n              type=\"text\"\n              variant=\"outlined\"\n              error={!!formErrors.firstName}\n              helperText={formErrors.firstName}\n              value={formValues.firstName}\n              autoComplete=\"first-name\"\n              onChange={handleFormvaluesChange}\n              fullWidth\n            />\n          </Grid>\n          <Grid\n            item\n            sm={6}\n            md={6}\n            xs={12}\n            style={{\n              paddingLeft: 10,\n            }}\n          >\n            <TextField\n              className={\"form-input\"}\n              name=\"lastName\"\n              label=\"Last Name\"\n              type=\"text\"\n              variant=\"outlined\"\n              error={!!formErrors.lastName}\n              helperText={formErrors.lastName}\n              value={formValues.lastName}\n              autoComplete=\"last-name\"\n              onChange={handleFormvaluesChange}\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n\n        <TextField\n          className={\"form-input\"}\n          name=\"email\"\n          label=\"Email\"\n          type=\"email\"\n          variant=\"outlined\"\n          error={!!formErrors.email}\n          helperText={formErrors.email}\n          value={formValues.email}\n          autoComplete=\"email\"\n          onChange={handleFormvaluesChange}\n          fullWidth\n        />\n        <TextField\n          className={\"form-input\"}\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          variant=\"outlined\"\n          error={!!formErrors.password}\n          helperText={formErrors.password}\n          value={formValues.password}\n          onChange={handleFormvaluesChange}\n          fullWidth\n        />\n        <TextField\n          className={\"form-input\"}\n          name=\"confirmPassword\"\n          label=\"Confirm Password\"\n          type=\"password\"\n          variant=\"outlined\"\n          error={!!formErrors.confirmPassword}\n          helperText={formErrors.confirmPassword}\n          value={formValues.confirmPassword}\n          onChange={handleFormvaluesChange}\n          fullWidth\n        />\n        <Button\n          className={\"form-input\"}\n          variant=\"contained\"\n          size=\"large\"\n          color=\"primary\"\n          type=\"submit\"\n          fullWidth\n          disabled={loginState.isLoading}\n        >\n          {loginState.isLoading ? (\n            <CircularProgress size={16} color=\"inherit\" />\n          ) : null}\n          &nbsp;&nbsp; Signup for Free\n        </Button>\n        <Grid container className={\"form-input\"}>\n          <Grid item sm={12}>\n            <Typography>\n              Already a member?&nbsp;<Link to={RouteURLs.LOGIN}>Login</Link>.\n            </Typography>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n};\nexport default SignUpPage;\n","import * as yup from \"yup\";\n\nexport const LoginValidation = yup.object().shape({\n  email: yup\n    .string()\n    .required(\"Please enter email.\")\n    .email(\"Please enter valid email.\"),\n  password: yup\n    .string()\n    .required(\"Please enter password.\")\n    .min(6, \"Please enter at least 6 digit password.\")\n    .max(20, \"Password should not be more than 20 characters.\"),\n});\n","import * as yup from \"yup\";\n\nexport const SignupValidation = yup.object().shape({\n  firstName: yup.string().required(\"Please enter first name.\"),\n  lastName: yup.string().required(\"Please enter last name.\"),\n  email: yup\n    .string()\n    .required(\"Please enter email.\")\n    .email(\"Please enter valid email.\"),\n  password: yup\n    .string()\n    .required(\"Please enter password.\")\n    .min(6, \"Please enter at least 6 digit password.\")\n    .max(20, \"Password should not be more than 20 characters.\"),\n  confirmPassword: yup\n    .string()\n    .oneOf(\n      [yup.ref(\"password\")],\n      \"Password and confirm password didn't match.\"\n    ),\n});\n","import * as yup from \"yup\";\n\nexport const AddPostValidation = yup.object().shape({\n  title: yup.string().required(\"Please enter title.\"),\n  slug: yup\n    .string()\n    .trim()\n    .required(\"Please enter slug.\")\n    .matches(\n      /^[a-zA-Z0-9][a-zA-Z0-9-_.]*$/,\n      \"Please enter only English characters with - or _\"\n    ),\n  postType: yup.string().required(\"Please enter post type.\"),\n  shortDescription: yup.string().required(\"Please enter a summary.\"),\n  categories: yup\n    .array()\n    .of(yup.string())\n    .required(\"Please choose atleast one category.\"),\n  featuredImage: yup.string().required(\"Please choose featured image.\"),\n  description: yup\n    .string()\n    .required(\"Please provide description.\")\n    .test(\n      \"validateJSONString\",\n      \"Please enter proper description\",\n      function (value) {\n        const { path, createError } = this;\n        try {\n          const newValue = JSON.parse(value || \"\");\n          const firstBlock = JSON.parse(JSON.stringify(newValue.blocks))[0]\n            .type;\n          console.log(firstBlock);\n          return true;\n        } catch (error) {\n          if ((error as { message: string }).message.includes(\"JSON\")) {\n            const div = document.createElement(\"div\");\n            div.innerHTML = value;\n            const text = div.textContent || div.innerText || \"\";\n            if (text && text !== \"{}\") {\n              if (text.split(\" \").length < 100) {\n                return createError({\n                  path,\n                  message: \"Please enter at least 100 words.\",\n                });\n              }\n              return true;\n            }\n          }\n          return createError({\n            path,\n            message: \"Please enter proper description.\",\n          });\n        }\n      }\n    ),\n});\n","import * as yup from \"yup\";\nimport { ApiHelper } from \"../../utills/helpers\";\n\nexport const ProfileDetailsValidations = yup.object().shape({\n  username: yup\n    .string()\n    .trim()\n    .required(\"Please enter username.\")\n    .test(\n      \"validateDuplicateUsername\",\n      \"This username is not available.\",\n      async function (username: any) {\n        const { path, createError } = this;\n        const {\n          isError,\n          messages,\n        } = await new ApiHelper().FetchFromServer(\n          \"/auth\",\n          \"/validate-username\",\n          \"get\",\n          true,\n          { username }\n        );\n        if (!isError) {\n          return true;\n        }\n        return createError({\n          path,\n          message: messages[0] || \"This username is not available.\",\n        });\n      }\n    ),\n  firstName: yup.string().trim().required(\"Please enter first name.\"),\n  lastName: yup.string().trim().required(\"Plesae enter last name\"),\n  phoneNumber: yup\n    .string()\n    .trim()\n    .notRequired()\n    .min(10, \"Phone number should be at least of 10 character.\")\n    .max(13, \"Phone number should not be more than 13 character.\"),\n  gender: yup\n    .string()\n    .trim()\n    .notRequired()\n    .oneOf([\"male\", \"female\", \"other\"], \"Invalid gender.\"),\n  address: yup.string().trim().optional(),\n  state: yup.string().trim().optional(),\n  city: yup.string().trim().optional(),\n  pincode: yup\n    .string()\n    .trim()\n    .notRequired()\n    .length(6, \"Pin code should be of 6 digits.\"),\n  about: yup.string().trim().optional(),\n});\n","import * as yup from \"yup\";\n\nexport const AddPayoutMethodValidation = yup.object().shape({\n  account_type: yup\n    .string()\n    .required(\"Please choose account type.\")\n    .oneOf([\"bank_account\", \"vpa\"]),\n  bank_account: yup.object().when(\"account_type\", {\n    is: \"bank_account\",\n    then: yup.object().shape({\n      name: yup.string().required(\"Please enter bank name.\"),\n      ifsc: yup.string().required(\"Please enter ifsc code.\"),\n      account_number: yup.string().required(\"Please enter account number.\"),\n    }),\n  }),\n  vpa: yup.object().when(\"account_type\", {\n    is: \"vpa\",\n    then: yup.object().shape({\n      address: yup.string().required(\"Please enter UPI ID\"),\n    }),\n  }),\n});\n","import * as yup from \"yup\";\n\nexport const CreatePayoutValidation = yup.object().shape({\n    mode: yup\n        .string()\n        .required(\"Please choose account type.\")\n        .oneOf([\"bank_account\", \"vpa\"]),\n    amount: yup.number().required(\"Please enter amount\").min(1, 'Amount should be greater than 1').max(yup.ref('availableBalance'), 'Amount should not be greater than available balance')\n});"],"sourceRoot":""}
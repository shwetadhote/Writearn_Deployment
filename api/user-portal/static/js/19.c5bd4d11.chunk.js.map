{"version":3,"sources":["resources/components/Common/EarningLoader.tsx","resources/pages/Earnings/SearchFilter.tsx","resources/pages/Earnings/index.tsx","resources/assets/money.svg"],"names":["EarningLoader","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","key","width","Skeleton","animation","height","align","component","SearchFilter","searchFilters","onChange","onSearch","onReset","sortByAmount","sortByStatus","classes","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","buttonContainer","useStyles","Grid","item","FormControl","className","InputLabel","id","Select","labelId","name","value","MenuItem","IconButton","onClick","table","Earnings","props","useLocation","search","pathname","history","useHistory","useState","EarningsPerPage","earningsPerPage","setEarningsPerPage","currentPage","setCurrentPage","setSearchFilters","dispatch","useDispatch","earningsRecordReducer","useSelector","state","useEffect","query","qs","payload","page","parseInt","limit","status","amount","requestEarningsRecords","isLoading","data","totalRecords","renderPagination","TablePagination","labelRowsPerPage","count","onChangePage","e","push","join","rowsPerPage","rowsPerPageOptions","EarningsPerPageOptions","onChangeRowsPerPage","target","container","justify","Typography","variant","console","log","TableContainer","Paper","length","index","scope","type","earningDescription","postTitle","views","shortNumber","paidAmount","Chip","size","label","color","style","textTransform","colSpan","src","money","alt","module","exports"],"mappings":"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","file":"static/js/19.c5bd4d11.chunk.js","sourcesContent":["import React from 'react';\nimport { TableBody, TableCell, TableRow, TableHead, Table } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\"\n\nconst EarningLoader = () => {\n    return (\n        <Table aria-label=\"simple table\">\n            <TableHead>\n                <TableRow>\n                    <TableCell>#</TableCell>\n                    <TableCell>Post Title</TableCell>\n                    <TableCell>Total Views</TableCell>\n                    <TableCell>Amount&nbsp;(&#8377;)</TableCell>\n                    <TableCell>Status</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {[1, 2, 3, 4].map((key: number) => (<TableRow key={key}>\n                    <TableCell width={100}><Skeleton animation=\"wave\" height={20} width=\"40%\" /></TableCell>\n                    <TableCell align=\"right\" width={500} component=\"th\" ><Skeleton animation=\"wave\" height={20} width=\"1000\" /></TableCell>\n                    <TableCell width={100}><Skeleton animation=\"wave\" height={20} width=\"40%\" /></TableCell>\n                    <TableCell width={100}><Skeleton animation=\"wave\" height={20} width=\"40%\" /></TableCell>\n                    <TableCell width={100}><Skeleton animation=\"wave\" height={20} width=\"80%\" /></TableCell>\n                </TableRow>))}\n            </TableBody></Table>\n    )\n}\n\nexport default EarningLoader;\n","import React from \"react\";\nimport { FormControl, InputLabel, Select, MenuItem, makeStyles, Grid } from \"@material-ui/core\"\nimport { ISearchFilter } from \"../../../interfaces\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\n\nexport const SearchFilter = ({\n    searchFilters,\n    onChange,\n    onSearch,\n    onReset\n}: ISearchFilter) => {\n    const { sortByAmount, sortByStatus } = searchFilters\n    \n    const useStyles = makeStyles((theme) => ({\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 150,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n        buttonContainer:{\n            marginTop: theme.spacing(2),\n        }\n    }));\n    const classes = useStyles();\n    return (\n        <Grid item>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Sort by amount</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    name={'sortByAmount'}\n                    value={sortByAmount}\n                    onChange={onChange}\n                >\n                    <MenuItem value={'desc'}>High to Low</MenuItem>\n                    <MenuItem value={'asc'}>Low to High</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-helper-label\">Filter by status</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-helper-label\"\n                    id=\"demo-simple-select-helper\"\n                    name={'sortByStatus'}\n                    value={sortByStatus}\n                    onChange={onChange}\n                >\n                    <MenuItem value=\"all\">\n                        All\n                    </MenuItem>\n                    <MenuItem value={'paid'}>Paid</MenuItem>\n                    <MenuItem value={'partially paid'}>Partially Paid</MenuItem>\n                    <MenuItem value={'unpaid'}>Unpaid</MenuItem>\n                </Select>\n            </FormControl>\n            <IconButton onClick={onSearch} className={classes.buttonContainer}>\n                <SearchIcon />\n            </IconButton>\n            <IconButton onClick={onReset} className={classes.buttonContainer}>\n                <AutorenewIcon />\n            </IconButton>\n        </Grid>\n    )\n}","import React, { useState, useEffect, FC } from \"react\";\nimport {\n  Grid,\n  TablePagination,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  makeStyles,\n  TableBody,\n  IconButton,\n  Chip,\n  Typography,\n} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useHistory } from \"react-router\";\nimport * as qs from \"query-string\";\nimport { requestEarningsRecords } from \"../../../redux/actions\";\nimport {\n  EarningsPerPage,\n  EarningsPerPageOptions,\n} from \"../../../utills/constants\";\nimport { IRootState, IEarningsRecords } from \"../../../interfaces\";\nimport { shortNumber } from \"../../../utills/helpers\";\nimport EarningLoader from \"../../components/Common/EarningLoader\";\nimport { SearchFilter } from \"./SearchFilter\";\nimport money from \"../../assets/money.svg\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst Earnings: FC = (props) => {\n  const { search, pathname } = useLocation();\n  const history = useHistory();\n  const [earningsPerPage, setEarningsPerPage] = useState(EarningsPerPage);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [searchFilters, setSearchFilters] = useState({\n    sortByAmount: \"\",\n    sortByStatus: \"all\",\n  });\n  const dispatch = useDispatch();\n  const { earningsRecordReducer } = useSelector((state: IRootState) => ({\n    earningsRecordReducer: state.earningsRecordReducer,\n  }));\n  useEffect(() => {\n    const query: any = qs.parse(search);\n    let payload = {\n      page: query.page ? parseInt(query.page) - 1 : 0,\n      limit: query.limit ? parseInt(query.limit) : EarningsPerPage,\n      status: query.status ? query.status : \"all\",\n      sortByAmount: query.amount ? query.amount : \"\",\n    };\n    setSearchFilters({\n      sortByAmount: payload.sortByAmount,\n      sortByStatus: payload.status,\n    });\n    setCurrentPage(payload.page);\n    setEarningsPerPage(payload.limit);\n    dispatch(\n      requestEarningsRecords({\n        ...payload,\n        currentPage: payload.page + 1,\n      })\n    );\n    // eslint-disable-next-line\n  }, [search]);\n\n  const handleSearch = () => {\n    const { sortByAmount, sortByStatus } = searchFilters;\n    let search: any = {\n      amount: sortByAmount,\n      status: sortByStatus,\n    };\n    history.push([pathname, qs.stringify({ ...search, page: 1 })].join(\"?\"));\n  };\n  const onReset = () => {\n    history.push(pathname);\n  };\n  const onPageChange = (e: any | null, page: number) => {\n    const query = qs.parse(search);\n    history.push(\n      [pathname, qs.stringify({ ...query, page: page + 1 })].join(\"?\")\n    );\n  };\n  const onChangeRowsPerPage = (e: any) => {\n    const {\n      target: { value },\n    } = e;\n    const query = qs.parse(search);\n    history.push(\n      [pathname, qs.stringify({ ...query, page: 1, limit: value })].join(\"?\")\n    );\n  };\n  const { isLoading, data, totalRecords } = earningsRecordReducer || {};\n  \n  const renderPagination = (\n    <TablePagination\n      labelRowsPerPage={\"Records per page\"}\n      component=\"div\"\n      count={totalRecords}\n      page={currentPage}\n      onChangePage={onPageChange}\n      rowsPerPage={earningsPerPage}\n      rowsPerPageOptions={EarningsPerPageOptions}\n      onChangeRowsPerPage={onChangeRowsPerPage}\n    />\n  );\n  const onSearchFilterChange = (e: any) => {\n    const {\n      target: { name, value },\n    } = e;\n    console.log(name, value, \"onSearchFilterChange\");\n\n    setSearchFilters({\n      ...searchFilters,\n      [name]: value,\n    });\n  };\n  const classes = useStyles();\n  let count = currentPage * earningsPerPage + 1;\n  return (\n    <>\n      <Grid container>\n        <Grid justify=\"space-between\" container>\n          <Grid item>\n            <Typography variant=\"h5\" component=\"h5\">\n              Earnings\n            </Typography>\n          </Grid>\n          <SearchFilter\n            searchFilters={searchFilters}\n            onChange={onSearchFilterChange}\n            onSearch={handleSearch}\n            onReset={onReset}\n          />\n        </Grid>\n        <TableContainer component={Paper}>\n          {isLoading ? (\n            <EarningLoader />\n          ) : (\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>#</TableCell>\n                    <TableCell>Post Title</TableCell>\n                    <TableCell align=\"center\">Total Unique Views</TableCell>\n                    <TableCell align=\"center\">\n                      Total Amount&nbsp;(&#8377;)\n                  </TableCell>\n                    <TableCell align=\"center\">\n                      Paid Amount&nbsp;(&#8377;)\n                  </TableCell>\n                    <TableCell align=\"right\">Status</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data && data.length ? (\n                    data.map((item: IEarningsRecords, index) => (\n                      <TableRow key={index}>\n                        <TableCell>{count++}</TableCell>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {item.type === \"bonus\" ? item.earningDescription : item.postTitle}\n                        </TableCell>\n                        <TableCell align=\"center\">{item.views}</TableCell>\n                        <TableCell align=\"center\">\n                          {item.amount ? shortNumber(item.amount) : 0}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {item.paidAmount ? shortNumber(item.paidAmount) : 0}\n                        </TableCell>\n                        <TableCell align=\"right\" className={`${item.status === \"partially paid\" ? \"partially-paid\" : \"\"}`}>\n                          <IconButton aria-label=\"share\" className={\"pull-right\"}>\n                            <Chip\n                              size=\"small\"\n                              label={item.status}\n                              color={\n                                item.status === \"paid\" ? \"primary\" : \"secondary\"\n                              }\n                              style={{ textTransform: \"capitalize\" }}\n                            />\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  ) : (\n                      <TableRow>\n                        <TableCell colSpan={6} align=\"center\">\n                          <div className=\"no-data\">\n                            <div className=\"no-data-icon\">\n                              <img src={money} alt={\"money\"} />\n                            </div>\n                            <p className=\"no-data-text\">\n                              You have not earned any amount yet. Try to add post\n                              and earn money!\n                        </p>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    )}\n                </TableBody>\n              </Table>\n            )}\n        </TableContainer>\n      </Grid>\n      {renderPagination}\n    </>\n  );\n};\n\nexport default Earnings;\n","module.exports = __webpack_public_path__ + \"static/media/money.21135113.svg\";"],"sourceRoot":""}